/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        cLayer: cLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "CLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        zFastLayer: zFastLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "ZFASTLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        zHomeMod: zHomeMod {
            compatible = "zmk,behavior-hold-tap";
            label = "ZHOMEMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    macros {
        ctrl_alt_del: ctrl_alt_del {
            label = "ZM_ctrl_alt_del";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp DEL>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp DEL>;
        };

        ctrl_shift_esc: ctrl_shift_esc {
            label = "ZM_ctrl_shift_esc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHIFT &kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LSHIFT &kp ESC>;
        };

        lgui_d: lgui_d {
            label = "ZM_lgui_d";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp D>,
                <&macro_release>,
                <&kp LGUI &kp D>;
        };

        lgui_shft_s: lgui_shft_s {
            label = "ZM_lgui_shft_s";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT &kp S>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT &kp S>;
        };

        lgui_e: lgui_e {
            label = "ZM_lgui_e";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp E>,
                <&macro_release>,
                <&kp LGUI &kp E>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1*  |  2*  |  3*  |     4*    |   5*  |   6*   |    7*    |  8*  |  9*  |   0*  | BSPC  |
            // |  TAB  |  Q   |  W   |  E   |     R     |   T   |   Y    |    U     |  I   |  O   |   P   |   '*  |
            // |   `*  |  A   |  S   |  D   |     F     |   G   |   H    |    J     |  K   |  L   |   ;*  | ENTER |
            // | SHIFT |  Z   |  X   |  C   |     V     |   B   |   N    |    M     |  ,*  |  .*  | UARW  |  /*   |
            // | LCTL  | LGUI | LALT | LOWR | 2uSpace(a)|4uSpace|  N/A** |2uSpace(b)| RAIS | LARW | DARW  | RARW  |

            bindings = <
&kp N1                    &kp N2                &kp N3                  &kp N4                &kp N5     &kp ESC    &kp BSPC   &kp N6     &kp N7                &kp N8                  &kp N9                &kp N0
&kp Q                     &kp W                 &kp F                   &kp P                 &kp G      &kp HOME   &kp END    &kp J      &kp L                 &kp U                   &kp Y                 &kp SEMI
&zHomeMod LEFT_CONTROL A  &zHomeMod LEFT_ALT R  &zHomeMod LEFT_SHIFT S  &zHomeMod LEFT_GUI T  &kp D      &kp RET    &kp SQT    &kp H      &zHomeMod LEFT_GUI N  &zHomeMod LEFT_SHIFT E  &zHomeMod LEFT_ALT I  &zHomeMod LEFT_CONTROL O
&kp Z                     &kp X                 &kp C                   &kp V                 &kp B      &kp LBKT   &kp RBKT   &kp K      &kp M                 &kp COMMA               &kp DOT               &kp FSLH
&kp LCTRL                 &kp LGUI              &kp LALT                &kp LEFT_SHIFT        &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &zFastLayer 1 ENTER   &kp LEFT                &kp DOWN              &kp RIGHT
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------------
            // |  F11   |   F1  |  F2   |  F3   |  F4      |  F5   |  F6    |   F7     |  F8  |  F9  |  F10  |  F12  |
            // |        |  INS  |  HOME | PG UP | File Exp*|       |        |          |      |      |  -*   |  =*   |
            // | win+d* |  DEL  |  END  | PG DN |          |       |        |          |      |      |       |       |
            // |  CAPS  |       |       |       |          |       |        |          |  [*  |  ]*  |       |   \*  |
            // |        |       |       | LOWR  |2uSpace(a)|4uSpace|  N/A** |2uSpace(b)| RAIS |      |       |       |

            bindings = <
&kp F11   &kp F1   &kp F2    &kp F3     &kp F4     &kp F5     &kp F6     &kp F7     &kp F8  &kp F9  &kp F10  &kp F12
&none     &kp INS  &kp HOME  &kp PG_UP  &lgui_e    &none      &none      &none      &none   &none   &none    &none
&lgui_d   &kp DEL  &kp END   &kp PG_DN  &none      &none      &none      &none      &none   &none   &none    &none
&kp CAPS  &none    &none     &none      &none      &none      &none      &none      &none   &none   &none    &none
&none     &none    &none     &mo 1      &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &mo 2   &none   &none    &none
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------
            // | PSCRN*| PSCRN |       |       |          |BT_NXT | BT_CLR |          |      |      |        |    DEL   |
            // | C_S_E |   7   |   8   |   9   |          |       |        |          |      |   +  |   -*   |     =*   |
            // |       |   4   |   5   |   6   |          |       |        |          |      |   /  |   *    | KP ENTER |
            // |       |   1   |   2   |   3   |          |       |        |          |  [*  |  ]*  | VOL UP |    \*    |
            // | C_A_D |   .   |   0   | LOWR  |2uSpace(a)|4uSpace|  N/A** |2uSpace(b)| RAIS | PREV | VOL DN*|   NEXT   |

            bindings = <
&lgui_shft_s     &kp PSCRN   &none      &none      &bt BT_NXT  &bt BT_CLR  &none      &none      &none  &none          &none            &kp DEL
&ctrl_shift_esc  &kp KP_N7   &kp KP_N8  &kp KP_N9  &none       &none       &none      &none      &none  &kp KP_PLUS    &none            &none
&none            &kp KP_N4   &kp KP_N5  &kp KP_N6  &none       &none       &none      &none      &none  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_ENTER
&none            &kp KP_N1   &kp KP_N2  &kp KP_N3  &none       &none       &none      &none      &none  &none          &kp C_VOL_UP     &none
&ctrl_alt_del    &kp KP_DOT  &kp KP_N0  &mo 1      &kp SPACE   &kp SPACE   &kp SPACE  &kp SPACE  &mo 2  &kp C_PREV     &none            &kp C_NEXT
            >;
        };

        adjust_layer_mo3 {
            // -----------------------------------------------------------------------------------------------
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |2uSpace(a)|4uSpace|  N/A** |2uSpace(b)|       |       |       |       |

            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
            >;
        };

        lost_layer_mo4 {
            // -----------------------------------------------------------------------------------------------
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |          |       |        |          |       |       |       |       |
            // |      |       |       |       |2uSpace(a)|4uSpace|  N/A** |2uSpace(b)|       |       |       |       |

            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
